<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rentit.dao.interfaces.IProductMapper">
    <resultMap id="ProductResultMap" type="Product">
        <result property="id" column="product_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="dayPrice" column="day_price"/>
        <result property="weekPrice" column="week_price"/>
        <result property="monthPrice" column="month_price"/>
        <result property="deposit" column="deposit"/>
        <result property="city" column="city"/>
        <result property="productValue" column="product_value"/>
        <result property="minLeasePeriod" column="min_lease_period"/>
        <result property="category" column="category"/>
        <result property="status" column="product_status"/>
        <result property="rentedUntil" column="rented_until" javaType="java.time.LocalDate"/>
        <result property="userId" column="user_id"/>
        <collection property="images" column="product_id"
                    select="com.rentit.dao.interfaces.IImageMapper.getImagesByProductId"/>
        <collection property="tags" column="product_id"
                    select="getTagsByProductId"/>
    </resultMap>

    <resultMap id="PublicProductResultMap" type="ProductDTO">
        <result property="id" column="product_id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="dayPrice" column="day_price"/>
        <result property="weekPrice" column="week_price"/>
        <result property="monthPrice" column="month_price"/>
        <result property="deposit" column="deposit"/>
        <result property="city" column="city"/>
        <result property="productValue" column="product_value"/>
        <result property="minLeasePeriod" column="min_lease_period"/>
        <result property="category" column="category"/>
        <result property="status" column="product_status"/>
        <result property="rentedUntil" column="rented_until" javaType="java.time.LocalDate"/>
        <collection property="images" column="product_id"
                    select="com.rentit.dao.interfaces.IImageMapper.getImagesByProductId"/>
        <collection property="tags" column="product_id"
                    select="getTagsByProductId"/>
    </resultMap>

    <select id="getProductsByName" resultMap="ProductResultMap">
        SELECT *
        FROM products
        WHERE name = #{name}
    </select>

    <select id="getNProductsByPage" resultMap="PublicProductResultMap">
        SELECT DISTINCT *
        FROM products
        ORDER BY product_id
            LIMIT ${(pageNum - 1) * n}, #{n};
    </select>
    <select id="getNProductsByPageWithFilters" resultMap="PublicProductResultMap">
        SELECT *
        FROM products
        WHERE (
        <foreach collection="filters" index="key" item="value" separator=" AND ">
            <if test="key.boundary == 'up'">
                ${key.columnName} &lt; #{value}
            </if>
            <if test="key.boundary == 'down'">
                ${key.columnName} &gt; #{value}
            </if>
            <if test="key.boundary == 'equals'">
                ${key.columnName} = #{value}
            </if>
        </foreach>
        )
        LIMIT ${(pageNum - 1) * n}, #{n};
    </select>
    <select id="getProductById" resultMap="ProductResultMap">
        SELECT *
        FROM products
        WHERE product_id = #{id};
    </select>
    <select id="getProductDTOById" resultMap="PublicProductResultMap">
        SELECT *
        FROM products
        WHERE product_id = #{id};
    </select>
    <select id="getProductsByUserId" resultMap="PublicProductResultMap">
        SELECT *
        FROM products
        WHERE user_id = #{userId};
    </select>
    <select id="getProductOwnerId">
        SELECT user_id
        FROM products
        WHERE product_id = #{productId};
    </select>
    <select id="getTagsByProductId" resultType="string">
        SELECT name
        FROM tags
        WHERE product_id = #{product_id};
    </select>
    <insert id="addProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (name, description, day_price, week_price, month_price, deposit, city, product_value,
                              min_lease_period, category, product_status, rented_until, user_id)
        VALUES (#{name}, #{description}, #{dayPrice}, #{weekPrice},
                #{monthPrice},
                #{deposit}, #{city}, #{productValue}, #{minLeasePeriod},
                #{category},
                #{status}, #{rentedUntil}, #{userId});
    </insert>
    <insert id="addTags">
        INSERT INTO tags (name, product_id)
        VALUES
        <foreach collection="tags" item="tag" separator=" , ">
            (#{tag}, #{productId})
        </foreach>
    </insert>
    <delete id="deleteProductById">
        DELETE
        FROM products
        WHERE product_id = #{id};
    </delete>
    <delete id="deleteTags">
        DELETE
        FROM tags
        WHERE product_id = #{productId}
    </delete>
    <update id="changeProductStatus">
        UPDATE products
        SET product_status = #{productStatus}
        WHERE product_id = #{productId};
    </update>
    <update id="setProductRentedUntilDate">
        UPDATE products
        SET rented_until = #{rentedUntil}
        WHERE product_id = #{productId};
    </update>
    <update id="updateProduct" parameterType="Product">
        UPDATE products
        SET name             = #{name},
            description      = #{description},
            day_price        = #{dayPrice},
            week_price       = #{weekPrice},
            month_price      = #{monthPrice},
            deposit          = #{deposit},
            city             = #{city},
            product_value    = #{productValue},
            min_lease_period = #{minLeasePeriod},
            category         = #{category},
            product_status   = #{status},
            rented_until     = #{rentedUntil}
        WHERE product_id = #{id}
    </update>
</mapper>